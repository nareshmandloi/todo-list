{"ast":null,"code":"var _jsxFileName = \"/Users/bytecodeagency/Desktop/naresh/react/todo-list/src/components/todo-list/index.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { toggleTodo } from './todosSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const todos = useSelector(state => state.todos);\n  const handleToggle = id => {\n    store.dispatch(toggleTodo(id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.completed,\n          onChange: () => handleToggle(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), todo.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"yf5/CXitEfCS89mS1QxI4IUHBGo=\", false, function () {\n  return [useSelector];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useSelector","toggleTodo","TodoList","todos","state","handleToggle","id","store","dispatch","map","todo","completed","text"],"sources":["/Users/bytecodeagency/Desktop/naresh/react/todo-list/src/components/todo-list/index.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { toggleTodo } from './todosSlice';\n\nconst TodoList = () => {\n  const todos = useSelector(state => state.todos);\n\n  const handleToggle = id => {\n    store.dispatch(toggleTodo(id));\n  };\n\n  return (\n    <ul>\n      {todos.map(todo => (\n        <li key={todo.id}>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={todo.completed}\n              onChange={() => handleToggle(todo.id)}\n            />\n            {todo.text}\n          </label>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,cAAc;AAAC;AAE1C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAMC,KAAK,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACD,KAAK,CAAC;EAE/C,MAAME,YAAY,GAAGC,EAAE,IAAI;IACzBC,KAAK,CAACC,QAAQ,CAACP,UAAU,CAACK,EAAE,CAAC,CAAC;EAChC,CAAC;EAED,oBACE;IAAA,UACGH,KAAK,CAACM,GAAG,CAACC,IAAI,iBACb;MAAA,uBACE;QAAA,wBACE;UACE,IAAI,EAAC,UAAU;UACf,OAAO,EAAEA,IAAI,CAACC,SAAU;UACxB,QAAQ,EAAE,MAAMN,YAAY,CAACK,IAAI,CAACJ,EAAE;QAAE;UAAA;UAAA;UAAA;QAAA,QACtC,EACDI,IAAI,CAACE,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ,GARDF,IAAI,CAACJ,EAAE;MAAA;MAAA;MAAA;IAAA,QAUjB;EAAC;IAAA;IAAA;IAAA;EAAA,QACC;AAET,CAAC;AAAC,GAvBIJ,QAAQ;EAAA,QACEF,WAAW;AAAA;AAAA,KADrBE,QAAQ;AAyBd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}